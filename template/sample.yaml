parameters:
  action: 'install'
  namespace: 'ns1'
  k8s:
    - app: app1
      name: k8s1
      env: dev
    - app: app2
      name: k8s2
      env: test

stages:
  - ${{ each r in parameters.k8s }}:
      - stage: k8s_deploy_${{ replace(r.name, '-', '_') }}
        variables:
        - template: ${{ parameters.sourceDirectory }}/${{ lower(r.env) }}-vars.yaml
        jobs:
          - job: k8s_deploy
            displayName: 'k8s_deploy on [${{ upper(r.name) }}]'
            workspace:
              clean: all
            steps:
              - task: FileTransform@1
                displayName: 'File transformation: appsettings.json'
                inputs:
                  folderPath: '${{ parameters.sourceDirectory }}'
                  targetFiles: 'data.json'
                  fileType: json
              - task: Bash@3
                displayName: Run bash
                inputs:
                  targetType: Inline
                  script: |
                    printenv
                    cat data.json
                    echo "repo name: $(Build.Repository.Name)"
                    echo "source baranch name: $(Build.SourceBranchName)"
                    git_log=$(git log --merges origin/$(Build.SourceBranchName) --oneline --grep='^Merge pull request' -1)
                    echo "${git_log}"
                    echo "merged from: ${git_log##* }"
                    p_sb="${git_log##* }"
                    echo "p_sb: ${p_sb}"
                    oneaccount_prefix="aksharagyana/"
                    source_branch=${p_sb//$oneaccount_prefix/}
                    echo "source_branch: ${source_branch}"
                    echo "Build.SourcesDirectory $(Build.SourcesDirectory)"
                    ls -ltr $(Build.SourcesDirectory)
                    echo "current directory"
                    ls -ltr
                    
                    echo "*****executed from template*****"
                    echo "1. parameter action ${{ parameters.action }}"
                    echo "2. parameter action ${{ parameters.action1 }}"
                    echo "3. parameter action ${{ parameters.action }} repo ${{ parameters.repo }} ref ${{ parameters.branch }} type ${{ parameters.type }}"
                    type=$(echo "${{ parameters.type }}" | tr [:upper:] [:lower:])
                    echo "4. type ${type}"
                    
                    
                  

